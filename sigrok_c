#!/bin/bash

##
# Sigrok Wrapper CLI Tool
# Christopher Apodaca
# Sep 25, 2020
# MIT License
##

# TIMESTAMP GLOBALS
IS_TIME=0

# INTEGER REGEX
INT_REGX='^[0-9]+$'

# OUTPUT FORMAT 
IS_OUTPUT=0
OUTPUT_SIZE=0
OUTPUT_ARG="--continuous"

# RPM GLOBALS
IS_RATIO=0
RATIO=1

# CLI flags
IS_CUSTOM_STDOUT=0 # If we should customize the ouput

while [ -n "$1" ]; do
	case "$1" in
	--helpme | -hm)
		echo " "
		echo " SIGROK-CLI WRAPPER "
		echo " "
		echo "-r | --reload          to reload USB Connection (usb_modeswitch --reset-usb)"
		echo "   | --timestamp       print timestamps)"
		echo "   | --output <val>    prints the specified number<val> of rows, if not issued prints continuously)"
		echo "   | --ratio  <val>    ratio<val> to divide RPM )"
		echo " "
		echo "Standard sigrok commands are passed through as normal..."
		echo " "
		exit
		;;

	--reload | -r)
		shift 1
		USB_ID=$(lsusb | grep 'Qin' | cut -d" " -f6 | sed -e 's/:/./g')
		USB_VID=$(echo $USB_ID | cut -d"." -f1)
		USB_PID=$(echo $USB_ID | cut -d"." -f2)
		USB_MODESWITCH=$(usb_modeswitch -v 0x$USB_VID -p 0x$USB_PID --reset-usb)

		echo "RESTARTING USB: $USB_ID"
		echo "$USB_MODESWITCH"
		;;

	--timestamp)
		shift 1
		IS_TIME=1
		IS_CUSTOM_STDOUT=1;
		;;

	--output)
		shift 1
		IS_OUTPUT=1

		if [[ $1 =~ $INT_REGX ]]; then
			OUTPUT_SIZE=$1
			shift 1
		fi
		;;

	--ratio)
		shift 1

		if [[ $1 =~ $INT_REGX ]]; then
			IS_RATIO=1
			RATIO=$1
			IS_CUSTOM_STDOUT=1;
			shift 1
		fi
		;;

		*)
		break
		;;
	esac

done

QIN=$(lsusb | grep 'Qin' | cut -d" " -f2,4 | cut -d ":" -f1 | sed -e 's/ /./g')
MY_DRIVER="uni-t-ut372:conn="
DRIVER_PARAMS="$MY_DRIVER$QIN "
PARENT_ARGS="$*"

# Perform standar Sigrok-cli commands
if [[ $IS_OUTPUT = 1 && $OUTPUT_SIZE -gt 0 ]]; then
	OUTPUT_ARG="--samples $OUTPUT_SIZE"
fi

#Perform custom output commands
if [ $IS_CUSTOM_STDOUT = 1 ]; then

	# CHECK for time & ratio
	if [[ $IS_TIME = 1 && $IS_RATIO = 1 ]]; then
		echo '[ TIMESTAMP ]          [ RPM ]'
		STDOUT="| xargs -L 1 bash -c 'printf \"[%s] %.4f\n\" \"\$(date +%s.%N)\" \"\$(echo \"\$2/${RATIO}\" | bc -l)\" ' bash "
	elif [ $IS_TIME = 1 ]; then
		echo '[ TIMESTAMP ]'
		STDOUT="| xargs -L 1 bash -c 'printf \"[%s] %s\n\" \"\$(date +%s.%N)\" \"\$*\" ' bash "
	elif [ $IS_RATIO = 1 ]; then
		echo '[ RPM ]'
		STDOUT="| grep P1 | cut -d' ' -f2 | awk -v c=${RATIO} '{\$0 /=c; print \$0 }' OFS='\n' "
	fi
	EXECUTE="sigrok-cli -d $DRIVER_PARAMS $OUTPUT_ARG $PARENT_ARGS $STDOUT"
else
	EXECUTE="sigrok-cli -d $DRIVER_PARAMS $OUTPUT_ARG $PARENT_ARGS "
fi

# EXECUTE cli
eval $EXECUTE
exit
